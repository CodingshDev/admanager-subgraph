type AchievementUnlocked @entity(immutable: true) {
  id: Bytes!
  user: Bytes! # address
  achievementId: BigInt! # uint256
  name: String! # string
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type AdvertisementDeactivated @entity(immutable: true) {
  id: Bytes!
  adIndex: BigInt! # uint256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type EngagementRecorded @entity(immutable: true) {
  id: Bytes!
  adIndex: BigInt! # uint256
  user: Bytes! # address
  timestamp: BigInt! # uint256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type EngagementRewardMinted @entity(immutable: true) {
  id: Bytes!
  user: Bytes! # address
  amount: BigInt! # uint256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type LevelUp @entity(immutable: true) {
  id: Bytes!
  user: Bytes! # address
  newLevel: BigInt! # uint256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type NewAdvertisement @entity(immutable: true) {
  id: Bytes!
  link: String! # string
  imageUrl: String! # string
  price: BigInt! # uint256
  advertiser: Bytes! # address
  referrer: Bytes! # address
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type NewChiefOfAdvertising @entity(immutable: true) {
  id: Bytes!
  newChief: Bytes! # address
  tokenBalance: BigInt! # uint256
  referralLevel: BigInt! # uint256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type NewCommunityChallenge @entity(immutable: true) {
  id: Bytes!
  description: String! # string
  goal: BigInt! # uint256
  reward: BigInt! # uint256
  deadline: BigInt! # uint256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type NewReferral @entity(immutable: true) {
  id: Bytes!
  referred: Bytes! # address
  referrer: Bytes! # address
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type Paused @entity(immutable: true) {
  id: Bytes!
  account: Bytes! # address
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type ReferralRewardDistributed @entity(immutable: true) {
  id: Bytes!
  referrer: Bytes! # address
  reward: BigInt! # uint256
  level: BigInt! # uint256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type ReputationUpdated @entity(immutable: true) {
  id: Bytes!
  user: Bytes! # address
  newReputation: BigInt! # uint256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type RoleAdminChanged @entity(immutable: true) {
  id: Bytes!
  role: Bytes! # bytes32
  previousAdminRole: Bytes! # bytes32
  newAdminRole: Bytes! # bytes32
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type RoleGranted @entity(immutable: true) {
  id: Bytes!
  role: Bytes! # bytes32
  account: Bytes! # address
  sender: Bytes! # address
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type RoleRevoked @entity(immutable: true) {
  id: Bytes!
  role: Bytes! # bytes32
  account: Bytes! # address
  sender: Bytes! # address
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type SpecialEventStarted @entity(immutable: true) {
  id: Bytes!
  name: String! # string
  startTime: BigInt! # uint256
  endTime: BigInt! # uint256
  rewardMultiplier: BigInt! # uint256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type Unpaused @entity(immutable: true) {
  id: Bytes!
  account: Bytes! # address
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type WeeklyBonusMinted @entity(immutable: true) {
  id: Bytes!
  user: Bytes! # address
  amount: BigInt! # uint256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type WithdrawCompleted @entity(immutable: true) {
  id: Bytes!
  owner: Bytes! # address
  amount: BigInt! # uint256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}
"""
Represents global statistics for the entire system
"""
type GlobalStats @entity {
  id: ID!
  totalAdvertisements: BigInt!
  totalEngagements: BigInt!
  totalUsers: BigInt!
  totalRewardsMinted: BigInt!
}

"""
Represents a user in the system
"""
type User @entity {
  id: ID!
  address: Bytes!
  level: BigInt!
  reputation: BigInt!
  achievementsCount: BigInt!
  engagementsCount: BigInt!
  totalRewardsEarned: BigInt!
  referrals: [User!]! @derivedFrom(field: "referrer")
  referrer: User
}

type Advertisement @entity {
  id: ID!
  link: String!
  imageUrl: String!
  price: BigInt!
  advertiser: User!
  referrer: User
  engagementsCount: BigInt!
  active: Boolean!
}